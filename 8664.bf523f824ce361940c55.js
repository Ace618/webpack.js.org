"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8664],{8664:function(e,t,n){n.r(t),n(7378);var a=n(2682),r=["components"];function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o.apply(this,arguments)}function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}(e,r);return(0,a.kt)("wrapper",o({components:t},n),(0,a.kt)("p",null,"Ignore the specified files, i.e. those matching the provided paths or regular expressions, while in ",(0,a.kt)("a",{href:"/configuration/watch",parentName:"p"},"watch mode"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{className:"hljs language-javascript",parentName:"pre"},(0,a.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,a.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,a.kt)("span",{className:"token punctuation",parentName:"span"},"."),"WatchIgnorePlugin"),(0,a.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,a.kt)("span",{className:"token punctuation",parentName:"code"},"{")," paths ",(0,a.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,a.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,a.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,a.kt)("h2",null,(0,a.kt)("span",{id:"options",parentName:"h2"}),"Options",(0,a.kt)("a",{href:"#options","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,a.kt)("span",{className:"header-link",parentName:"a"}))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"paths")," (",(0,a.kt)("inlineCode",{parentName:"li"},"Array<string | RegExp>"),"): A list of RegExps or absolute paths to directories or files that should be ignored.")))}s.isMDXComponent=!0,t.default=s}}]);